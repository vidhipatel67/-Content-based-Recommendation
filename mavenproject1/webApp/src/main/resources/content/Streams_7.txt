<p>Input streams acquire bytes for our programmed java application/program (e.g. a file, an array, a keyboard or monitor, etc.). <code>InputStream</code> is an abstract class that represents a source of byte data. It has a <code>read()</code> method, which returns the next byte in the stream and a <code>close()</code> method, which should be called by a program when that program is done with the stream. The <code>read()</code> method is overloaded, and can take a byte array to read to. It has a <code>skip()</code> method that can skip a number of bytes, and an <code>available()</code> method that a program can use to determine the number of bytes immediately available to be read, as not all the data is necessarily ready immediately. As an abstract class, it cannot be instantiated, but describes the general behavior of an input stream. A few examples of concrete subclasses would be <code>ByteArrayInputStream</code>, which reads from a byte array, and <code>FileInputStream</code>, which reads byte data from a file.</p>